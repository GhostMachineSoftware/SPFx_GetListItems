{"version":3,"sources":["webpack:///../webpack/bootstrap","webpack:///../external \"popper.js\"","webpack:///.././src/webparts/getListItems/GetListItemsWebPart.ts","webpack:///../external \"@microsoft/sp-loader\"","webpack:///.././node_modules/css-loader/dist/runtime/api.js","webpack:///../external \"bootstrap\"","webpack:///.././lib/webparts/getListItems/styles/custom.css?a36b","webpack:///../external \"@microsoft/sp-core-library\"","webpack:///.././lib/webparts/getListItems/styles/custom.css","webpack:///../external \"@microsoft/sp-webpart-base\"","webpack:///.././node_modules/@microsoft/loader-load-themed-styles/node_modules/@microsoft/load-themed-styles/lib/index.js","webpack:///../external \"@microsoft/sp-http\"","webpack:///../external \"GetListItemsWebPartStrings\"","webpack:///../external \"jquery\"","webpack:///../(webpack)/buildin/global.js"],"names":[],"mappings":"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5F;AACA,cAAc,QAAS,sBAAsB,kBAAkB,aAAa,mCAAmC,YAAY,mBAAmB,mCAAmC,WAAW,+BAA+B,sBAAsB,qBAAqB,+BAA+B,oCAAoC,qBAAqB,oCAAoC,qBAAqB,wBAAwB,cAAc,kBAAkB,QAAQ,WAAW,gCAAgC,wBAAwB,yBAAyB,+BAA+B,WAAW,+BAA+B,gDAAgD,WAAW,yBAAyB,UAAU,mCAAmC,gBAAgB,mCAAmC,+CAA+C,kBAAkB,QAAQ,WAAW,eAAe,gBAAgB,qBAAqB,UAAU,kCAAkC,mBAAmB,qCAAqC,yDAAyD,kCAAkC,mBAAmB,wBAAwB;;;;;;;;;;;;;ACFlqC,kD;;;;;;;;;;;;ACAA,8CAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mGAAmG;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA,2BAA2B,YAAY,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,SAAY,oBAAoB,IAAK;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,oBAAoB;AACpB,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AC9SA,kD;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C","file":"get-list-items-web-part.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"DWwB\");\n","module.exports = __WEBPACK_EXTERNAL_MODULE__27z4__;","import { Version } from '@microsoft/sp-core-library';\nimport { SPComponentLoader } from '@microsoft/sp-loader';\n\nimport {  \n  SPHttpClient, \n  SPHttpClientResponse, \n  ISPHttpClientOptions\n} from '@microsoft/sp-http';\n\nimport {\n  BaseClientSideWebPart,\n  IPropertyPaneConfiguration,\n  PropertyPaneTextField,\n  PropertyPaneButton,\n  PropertyPaneButtonType,\n  IWebPartPropertiesMetadata\n} from '@microsoft/sp-webpart-base';\n\n/*import {\n  IPropertyPaneConfiguration,\n  PropertyPaneTextField\n} from '@microsoft/sp-property-pane';\n*/\n\nimport {\n  Environment,\n  EnvironmentType\n} from '@microsoft/sp-core-library';\n\nimport { escape } from '@microsoft/sp-lodash-subset';\nimport styles from './GetListItemsWebPart.module.scss';\nimport * as strings from 'GetListItemsWebPartStrings';\n\n//*** Custom Imports ***/\nrequire('popper.js');\nimport 'jquery';\nimport 'bootstrap';\nimport './styles/custom.css';\n\nexport interface IGetListItemsWebPartProps {\n  description: string;\n}\n\nexport interface ISPLists {\n  value: ISPList[];\n}\n\nexport interface ISPList {\n  LinkGroup : string;\n  LinkGroupID : number;\n  LinkTeam: string;\n  LinkID : number;\n  LinkName : string;\n  LinkURL : string;\n  LinkBrowse : string;\n}\n\nexport default class GetListItemsWebPart extends BaseClientSideWebPart <IGetListItemsWebPartProps> {\n  \n  private _getListData(): Promise<ISPLists> {\n    return this.context.spHttpClient.get(this.context.pageContext.web.absoluteUrl + \"/_api/web/lists/GetByTitle('Useful Links')/Items?$orderby=LinkGroup&$orderby=LinkID\",SPHttpClient.configurations.v1)\n        .then((response: SPHttpClientResponse) => {\n        return response.json();\n        });\n  }\n  \n  private ButtonClick(oldVal: any): any {  \n    let currentWebUrl = this.context.pageContext.web.absoluteUrl; \n    window.open(currentWebUrl+'/Lists/UsefulLinks/AllItems.aspx','_blank');  \n    //return \"test\"  \n  }\n\n  private _renderListAsync(): void {\n    \n      if (Environment.type == EnvironmentType.SharePoint || \n               Environment.type == EnvironmentType.ClassicSharePoint) {\n       this._getListData()\n         .then((response) => {\n           this._renderList(response.value);\n         });\n     }\n  }\n\n  private _renderList(items: ISPList[]): void {   \n    let currentWebUrl = this.context.pageContext.web.absoluteUrl; \n    let html: string = '';\n    let prevLinkGroup: string = '';\n    let groupCardHTML: string = '';\n    let linkHTML: string = '';\n    let linkCount: number=0;\n    let groupID=1;\n    console.log(currentWebUrl);\n    \n    items.forEach((item: ISPList) => {\n      let linkGroup: string=item.LinkGroup;\n      let linkTeam: string=item.LinkTeam;\n      let cardIDName: string=item.LinkGroup.replace(/\\s/g, '');        \n      let linkGroupId: number=Math.floor(item.LinkGroupID);\n      let linkName: string=item.LinkName;\n      let groupRef: string=\"\";\n\n      switch(linkGroupId){\n        case 3:{\n          groupRef=\"#maxLinks\";\n          break;\n        }\n        case 2:{\n          groupRef=\"#buLinks\";\n          break;\n        }\n        case 1:{\n          groupRef=\"#teamLinks\";\n          break;\n        }\n      }\n      console.log(linkTeam);\n\n      const groupContainer: Element = this.domElement.querySelector(groupRef);\n\n      if(linkGroup!==prevLinkGroup){\n        groupCardHTML = `<!-- ***** Group `+groupID+` is the ${item.LinkGroup} links ***** -->\n                        <div class=\"card\" id=\"usefulLinks`+cardIDName+`\">                     \n                          <a class=\"card-link\" data-toggle=\"collapse\" href=\"#group`+groupID+`\" style=\"text-decoration:none\">\n                            <div class=\"card-header\">\n                              <h5 id=\"groupTitle`+groupID+`\">${item.LinkGroup}</h5>\n                              <div class=\"accordionToggle\"></div> \n                            </div>\n                          </a>\n                          <div id=\"group`+groupID+`\" class=\"card-body collapse\" data-parent=\"#linksAccordion\">\n                            <div class=\"list-group\" id=\"links`+cardIDName+`\">\n                              <a href=\"${item.LinkURL}\" target=\"${item.LinkBrowse}\">\n                                <div class=\"list-group-item\">${item.LinkName}</div>\n                              </a>\n                            </div>\n                          </div>\n                        </div>`;\n        groupContainer.innerHTML = groupCardHTML;\n        groupID++;\n      }\n\n      const linkContainer: Element = this.domElement.querySelector('#links'+cardIDName);\n\n      if(linkGroup === prevLinkGroup && linkCount>0){\n        $('#links'+cardIDName).append('<a href=\"${item.LinkURL}\" target=\"${item.LinkBrowse}\"><div class=\"list-group-item\">'+linkName+'</div></a>');\n        //linkHTML = `<a href=\"${item.LinkURL}\" target=\"${item.LinkBrowse}\"><div class=\"list-group-item\">${item.LinkName}</div></a>`;\n        //linkContainer.innerHTML= linkHTML;\n      }\n      prevLinkGroup = linkGroup;\n      linkCount++;\n    });\n  }\n\n  public render(): void {\n    let bootstrapCssURL = \"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\";\n    let fontawesomeCssURL = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/regular.min.css\";\n    SPComponentLoader.loadCss(bootstrapCssURL);\n    SPComponentLoader.loadCss(fontawesomeCssURL);\n    this.domElement.innerHTML = `\n    <div class=\"usefulLinksSection\">\n      <div class=\"row linkContainer\" id=\"usefulLinks\">\n        <div id=\"linksAccordion\" style=\"width:100%\">                        \n          <div id=\"teamLinks\"></div>\n          <div id=\"buLinks\"></div>\n          <div id=\"maxLinks\"></div>\n        </div>\n      </div> \n    </div>`;\n  \n    this._renderListAsync();\n  }\n\n  protected get dataVersion(): Version {\n    return Version.parse('1.0');\n  }\n\n  protected get propertiesMetadata(): IWebPartPropertiesMetadata {\n    return {\n      'title': { isSearchablePlainText: true },\n      'intro': { isHtmlString: true },\n      'image': { isImageSource: true },\n      'url': { isLink: true }\n    };\n  }\n\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\n    return {\n      pages: [\n        {\n          header: {\n            description: strings.PropertyPaneDescription\n          },\n          groups: [\n            {\n              //groupName: strings.BasicGroupName,\n              groupFields: [\n                PropertyPaneTextField('description', {\n                  label: strings.DescriptionFieldLabel\n                }),           \n                PropertyPaneButton('Edit Links', {\n                  text: \"Edit Links\",\n                  buttonType: PropertyPaneButtonType.Primary,\n                  onClick: this.ButtonClick.bind(this)  \n                 })\n              ]\n            }\n          ]\n        }\n      ]\n    };\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_I6O9__;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","module.exports = __WEBPACK_EXTERNAL_MODULE_StVt__;","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??postcss!./custom.css\");\nvar loader = require(\"/Users/JC/Projects/SharePoint/SPFx/SPFx_getListItems/node_modules/@microsoft/loader-load-themed-styles/node_modules/@microsoft/load-themed-styles/lib/index.js\");\n\nif(typeof content === \"string\") content = [[module.id, content]];\n\n// add the styles to the DOM\nfor (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);\n\nif(content.locals) module.exports = content.locals;","module.exports = __WEBPACK_EXTERNAL_MODULE_UWqr__;","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".card,.card-header{margin-bottom:5px}.card-header{background-color:#ddddeb!important;height:50px}.card-header:hover{background-color:#7676b8!important;color:#fff;text-decoration:none!important}.card-header:hover h5{color:#fff!important;text-decoration:none!important}.card-header:hover .accordionToggle{color:#fff!important}.card-body .list-group a,.card-link{text-decoration:none;color:#545487!important}.card-link h5{position:absolute;top:8px}.card-body{background-color:#fff!important;color:#545487!important;padding:.25rem!important}.card-body .list-group a:hover{color:#fff;text-decoration:none!important}.card-body .list-group a:hover .list-group-item{color:#fff;background-color:#7676b8}.root-131{background-color:#545487!important}.root-131:hover{background-color:#7676b8!important}[data-toggle=collapse] .accordionToggle:before{position:absolute;top:8px;right:15px;font-size:1rem;font-weight:700;color:#fff!important;padding:0;font-family:Font Awesome\\\\ 5 Free;content:\\\"\\\\f35a\\\";transition:transform .3s ease-in-out}[data-toggle=collapse].collapsed .accordionToggle:before{font-family:Font Awesome\\\\ 5 Free;content:\\\"\\\\f35a\\\";transform:rotate(90deg)}\", \"\"]);\n\n","module.exports = __WEBPACK_EXTERNAL_MODULE_br4S__;","\"use strict\";\r\n/**\r\n * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value\r\n * to use if that slot is not specified by the theme.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Store the theming state in __themeState__ global scope for reuse in the case of duplicate\r\n// load-themed-styles hosted on the page.\r\nvar _root = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any\r\n// Nonce string to inject into script tag if one provided. This is used in CSP (Content Security Policy).\r\nvar _styleNonce = _root && _root.CSPSettings && _root.CSPSettings.nonce;\r\nvar _themeState = initializeThemeState();\r\n/**\r\n * Matches theming tokens. For example, \"[theme: themeSlotName, default: #FFF]\" (including the quotes).\r\n */\r\n// tslint:disable-next-line:max-line-length\r\nvar _themeTokenRegex = /[\\'\\\"]\\[theme:\\s*(\\w+)\\s*(?:\\,\\s*default:\\s*([\\\\\"\\']?[\\.\\,\\(\\)\\#\\-\\s\\w]*[\\.\\,\\(\\)\\#\\-\\w][\\\"\\']?))?\\s*\\][\\'\\\"]/g;\r\nvar now = function () { return (typeof performance !== 'undefined' && !!performance.now) ? performance.now() : Date.now(); };\r\nfunction measure(func) {\r\n    var start = now();\r\n    func();\r\n    var end = now();\r\n    _themeState.perf.duration += end - start;\r\n}\r\n/**\r\n * initialize global state object\r\n */\r\nfunction initializeThemeState() {\r\n    var state = _root.__themeState__ || {\r\n        theme: undefined,\r\n        lastStyleElement: undefined,\r\n        registeredStyles: []\r\n    };\r\n    if (!state.runState) {\r\n        state = __assign({}, (state), { perf: {\r\n                count: 0,\r\n                duration: 0\r\n            }, runState: {\r\n                flushTimer: 0,\r\n                mode: 0 /* sync */,\r\n                buffer: []\r\n            } });\r\n    }\r\n    if (!state.registeredThemableStyles) {\r\n        state = __assign({}, (state), { registeredThemableStyles: [] });\r\n    }\r\n    _root.__themeState__ = state;\r\n    return state;\r\n}\r\n/**\r\n * Loads a set of style text. If it is registered too early, we will register it when the window.load\r\n * event is fired.\r\n * @param {string | ThemableArray} styles Themable style text to register.\r\n * @param {boolean} loadAsync When true, always load styles in async mode, irrespective of current sync mode.\r\n */\r\nfunction loadStyles(styles, loadAsync) {\r\n    if (loadAsync === void 0) { loadAsync = false; }\r\n    measure(function () {\r\n        var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);\r\n        var _a = _themeState.runState, mode = _a.mode, buffer = _a.buffer, flushTimer = _a.flushTimer;\r\n        if (loadAsync || mode === 1 /* async */) {\r\n            buffer.push(styleParts);\r\n            if (!flushTimer) {\r\n                _themeState.runState.flushTimer = asyncLoadStyles();\r\n            }\r\n        }\r\n        else {\r\n            applyThemableStyles(styleParts);\r\n        }\r\n    });\r\n}\r\nexports.loadStyles = loadStyles;\r\n/**\r\n * Allows for customizable loadStyles logic. e.g. for server side rendering application\r\n * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}\r\n * a loadStyles callback that gets called when styles are loaded or reloaded\r\n */\r\nfunction configureLoadStyles(loadStylesFn) {\r\n    _themeState.loadStyles = loadStylesFn;\r\n}\r\nexports.configureLoadStyles = configureLoadStyles;\r\n/**\r\n * Configure run mode of load-themable-styles\r\n * @param mode load-themable-styles run mode, async or sync\r\n */\r\nfunction configureRunMode(mode) {\r\n    _themeState.runState.mode = mode;\r\n}\r\nexports.configureRunMode = configureRunMode;\r\n/**\r\n * external code can call flush to synchronously force processing of currently buffered styles\r\n */\r\nfunction flush() {\r\n    measure(function () {\r\n        var styleArrays = _themeState.runState.buffer.slice();\r\n        _themeState.runState.buffer = [];\r\n        var mergedStyleArray = [].concat.apply([], styleArrays);\r\n        if (mergedStyleArray.length > 0) {\r\n            applyThemableStyles(mergedStyleArray);\r\n        }\r\n    });\r\n}\r\nexports.flush = flush;\r\n/**\r\n * register async loadStyles\r\n */\r\nfunction asyncLoadStyles() {\r\n    return setTimeout(function () {\r\n        _themeState.runState.flushTimer = 0;\r\n        flush();\r\n    }, 0);\r\n}\r\n/**\r\n * Loads a set of style text. If it is registered too early, we will register it when the window.load event\r\n * is fired.\r\n * @param {string} styleText Style to register.\r\n * @param {IStyleRecord} styleRecord Existing style record to re-apply.\r\n */\r\nfunction applyThemableStyles(stylesArray, styleRecord) {\r\n    if (_themeState.loadStyles) {\r\n        _themeState.loadStyles(resolveThemableArray(stylesArray).styleString, stylesArray);\r\n    }\r\n    else {\r\n        registerStyles(stylesArray);\r\n    }\r\n}\r\n/**\r\n * Registers a set theme tokens to find and replace. If styles were already registered, they will be\r\n * replaced.\r\n * @param {theme} theme JSON object of theme tokens to values.\r\n */\r\nfunction loadTheme(theme) {\r\n    _themeState.theme = theme;\r\n    // reload styles.\r\n    reloadStyles();\r\n}\r\nexports.loadTheme = loadTheme;\r\n/**\r\n * Clear already registered style elements and style records in theme_State object\r\n * @param option - specify which group of registered styles should be cleared.\r\n * Default to be both themable and non-themable styles will be cleared\r\n */\r\nfunction clearStyles(option) {\r\n    if (option === void 0) { option = 3 /* all */; }\r\n    if (option === 3 /* all */ || option === 2 /* onlyNonThemable */) {\r\n        clearStylesInternal(_themeState.registeredStyles);\r\n        _themeState.registeredStyles = [];\r\n    }\r\n    if (option === 3 /* all */ || option === 1 /* onlyThemable */) {\r\n        clearStylesInternal(_themeState.registeredThemableStyles);\r\n        _themeState.registeredThemableStyles = [];\r\n    }\r\n}\r\nexports.clearStyles = clearStyles;\r\nfunction clearStylesInternal(records) {\r\n    records.forEach(function (styleRecord) {\r\n        var styleElement = styleRecord && styleRecord.styleElement;\r\n        if (styleElement && styleElement.parentElement) {\r\n            styleElement.parentElement.removeChild(styleElement);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Reloads styles.\r\n */\r\nfunction reloadStyles() {\r\n    if (_themeState.theme) {\r\n        var themableStyles = [];\r\n        for (var _i = 0, _a = _themeState.registeredThemableStyles; _i < _a.length; _i++) {\r\n            var styleRecord = _a[_i];\r\n            themableStyles.push(styleRecord.themableStyle);\r\n        }\r\n        if (themableStyles.length > 0) {\r\n            clearStyles(1 /* onlyThemable */);\r\n            applyThemableStyles([].concat.apply([], themableStyles));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Find theme tokens and replaces them with provided theme values.\r\n * @param {string} styles Tokenized styles to fix.\r\n */\r\nfunction detokenize(styles) {\r\n    if (styles) {\r\n        styles = resolveThemableArray(splitStyles(styles)).styleString;\r\n    }\r\n    return styles;\r\n}\r\nexports.detokenize = detokenize;\r\n/**\r\n * Resolves ThemingInstruction objects in an array and joins the result into a string.\r\n * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.\r\n */\r\nfunction resolveThemableArray(splitStyleArray) {\r\n    var theme = _themeState.theme;\r\n    var themable = false;\r\n    // Resolve the array of theming instructions to an array of strings.\r\n    // Then join the array to produce the final CSS string.\r\n    var resolvedArray = (splitStyleArray || []).map(function (currentValue) {\r\n        var themeSlot = currentValue.theme;\r\n        if (themeSlot) {\r\n            themable = true;\r\n            // A theming annotation. Resolve it.\r\n            var themedValue = theme ? theme[themeSlot] : undefined;\r\n            var defaultValue = currentValue.defaultValue || 'inherit';\r\n            // Warn to console if we hit an unthemed value even when themes are provided, but only if \"DEBUG\" is true.\r\n            // Allow the themedValue to be undefined to explicitly request the default value.\r\n            if (theme && !themedValue && console && !(themeSlot in theme) && typeof DEBUG !== 'undefined' && DEBUG) {\r\n                console.warn(\"Theming value not provided for \\\"\" + themeSlot + \"\\\". Falling back to \\\"\" + defaultValue + \"\\\".\");\r\n            }\r\n            return themedValue || defaultValue;\r\n        }\r\n        else {\r\n            // A non-themable string. Preserve it.\r\n            return currentValue.rawString;\r\n        }\r\n    });\r\n    return {\r\n        styleString: resolvedArray.join(''),\r\n        themable: themable\r\n    };\r\n}\r\n/**\r\n * Split tokenized CSS into an array of strings and theme specification objects\r\n * @param {string} styles Tokenized styles to split.\r\n */\r\nfunction splitStyles(styles) {\r\n    var result = [];\r\n    if (styles) {\r\n        var pos = 0; // Current position in styles.\r\n        var tokenMatch = void 0; // tslint:disable-line:no-null-keyword\r\n        while (tokenMatch = _themeTokenRegex.exec(styles)) {\r\n            var matchIndex = tokenMatch.index;\r\n            if (matchIndex > pos) {\r\n                result.push({\r\n                    rawString: styles.substring(pos, matchIndex)\r\n                });\r\n            }\r\n            result.push({\r\n                theme: tokenMatch[1],\r\n                defaultValue: tokenMatch[2] // May be undefined\r\n            });\r\n            // index of the first character after the current match\r\n            pos = _themeTokenRegex.lastIndex;\r\n        }\r\n        // Push the rest of the string after the last match.\r\n        result.push({\r\n            rawString: styles.substring(pos)\r\n        });\r\n    }\r\n    return result;\r\n}\r\nexports.splitStyles = splitStyles;\r\n/**\r\n * Registers a set of style text. If it is registered too early, we will register it when the\r\n * window.load event is fired.\r\n * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.\r\n * @param {IStyleRecord} styleRecord May specify a style Element to update.\r\n */\r\nfunction registerStyles(styleArray) {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    var head = document.getElementsByTagName('head')[0];\r\n    var styleElement = document.createElement('style');\r\n    var _a = resolveThemableArray(styleArray), styleString = _a.styleString, themable = _a.themable;\r\n    styleElement.setAttribute('data-load-themed-styles', 'true');\r\n    styleElement.type = 'text/css';\r\n    if (_styleNonce) {\r\n        styleElement.setAttribute('nonce', _styleNonce);\r\n    }\r\n    styleElement.appendChild(document.createTextNode(styleString));\r\n    _themeState.perf.count++;\r\n    head.appendChild(styleElement);\r\n    var ev = document.createEvent('HTMLEvents');\r\n    ev.initEvent('styleinsert', true /* bubbleEvent */, false /* cancelable */);\r\n    ev.args = {\r\n        newStyle: styleElement\r\n    };\r\n    document.dispatchEvent(ev);\r\n    var record = {\r\n        styleElement: styleElement,\r\n        themableStyle: styleArray\r\n    };\r\n    if (themable) {\r\n        _themeState.registeredThemableStyles.push(record);\r\n    }\r\n    else {\r\n        _themeState.registeredStyles.push(record);\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","module.exports = __WEBPACK_EXTERNAL_MODULE_vlQI__;","module.exports = __WEBPACK_EXTERNAL_MODULE_wXD0__;","module.exports = __WEBPACK_EXTERNAL_MODULE_xeH2__;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}